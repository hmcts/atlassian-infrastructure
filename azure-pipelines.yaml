trigger:
  branches:
    include:
      - master


pr:
  branches:
    include:
      - master


resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: refs/heads/master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: "hmcts"

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy
  - name: environment_components
    type: object
    default:
      - deployment: "nonprod_general"
        environment: "nonprod"
        component: "general"
        service_connection: "MOJ DCD Atlassian NLE"
        # dependsOn: "Precheck"
        resource_group: azure-control-stg-rg
      # - deployment: "prod_general"
      #   environment: "prod"
      #   component: "general"
      #   service_connection: "MOJ DCD Atlassian LVE"
      #   resource_group: azure-control-stg-rg
      #   dependsOn: "nonprod_general"
    

variables:
  - name: timeoutInMinutes
    value: 60
  - name: product
    value: atlassian
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - name: agentPool
    value: 'ubuntu-latest'
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  # - stage: Precheck
  #   jobs:
  #     - job:
  #       pool:
  #           vmImage: ${{ variables.agentPool }}
  #       steps:
  #         - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
  #           parameters:
  #             keyvaultName: "infra-vault-nonprod"
  #             keyvaultSecret: "azure-devops-sp-token"
  #             serviceConnection: "azurerm-sandbox"
  #             overrideAction: ${{ parameters.overrideAction }}
  - ${{ each deployment in parameters.environment_components }}:
      - stage: ${{ deployment.deployment }}
        dependsOn: ${{ deployment.dependsOn }}
        jobs:
          - job: TerraformPlanApply
            pool:
              vmImage: ${{ variables.agentPool }}
            timeoutInMinutes: ${{ variables.timeoutInMinutes }}
            steps:
              - template: steps/terraform.yaml@cnp-azuredevops-libraries
                parameters:
                  overrideAction: ${{ parameters.overrideAction }}
                  environment: ${{ deployment.environment }}
                  component: ${{ deployment.component }}
                  serviceConnection: ${{ deployment.service_connection }}
                  terraformInitSubscription: ${{ variables.terraformInitSubscription }}
                  product: ${{ variables.product }}
                  ${{ if ne(deployment.resource_group, '') }}:
                    initCommandOptions: -backend-config=resource_group_name=${{ deployment.resource_group }}